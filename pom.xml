<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.riaconnection.vertx</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vertx.dir>${env.VERTX}</vertx.dir>
		<vertx.version>1.3.1.final</vertx.version>
		<mongo.host>localhost</mongo.host>
		<mongo.port>27017</mongo.port>
		<mongo.admin>mongo_admin</mongo.admin>
		<mongo.password>mongo_password</mongo.password>
		<mongo.db>default_db</mongo.db>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.vert-x</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.vert-x</groupId>
			<artifactId>vertx-lang-java</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.vert-x</groupId>
			<artifactId>vertx-platform</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.vert-x</groupId>
			<artifactId>vertx-testframework</artifactId>
			<version>${vertx.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.5.9.Final</version>
		</dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<version>2.4.1</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>crazy-penguin-repository</id>
			<url>https://github.com/crazyfrozenpenguin/cpenguin_repository/raw/master/maven-repo/repository</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>codehaus</id>
			<url>http://repository.codehaus.org/org/codehaus</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
    	<repository>
      		<id>alternative mvnrepository</id>
      		<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>    	</repository>		
	</repositories>

	<build>
		<resources>
    		<resource>
       			<directory>${basedir}/src/main/resources</directory>
     		</resource>
    		<resource>
       			<directory>${basedir}/src/main/webapp</directory>
     		</resource>
   		</resources>
		<plugins>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-enforcer-plugin</artifactId>
		        <version>1.2</version>
		        <executions>
		        	<execution>
			            <id>enforce-versions</id>
			            <goals>
			            	<goal>enforce</goal>
			            </goals>
			            <configuration>
			              	<rules>
				                <requireMavenVersion>
				                  	<version>3.0</version>
				                </requireMavenVersion>
			              	</rules>
		            	</configuration>
		        	</execution>
		    	</executions>
		    </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/src/properties/deploy-only.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>check-vertx-exists</id>
						<phase>validate</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target name="check-vertx-exists">
								<script language="javascript">
									<![CDATA[
									    var vertxDir = project.getProperty("vertx.dir");
										
									    if (vertxDir == "" || vertxDir.startsWith("${")) {
									    	vertxDir = project.getProperty("project.build.directory") + "/vert.x";
									    }
									    var installDir = vertxDir + "/../";
									    var vertx = new java.io.File(installDir);
										project.setProperty("vertxInstalled", vertx.exists());
									    project.setProperty("vertx.install.dir", installDir);
									]]>
								</script>
								<echo message="Is Vertx installed? ${vertxInstalled}" />
								<echo message="Vertx installation directory set to: ${vertx.install.dir}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/data</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/webapp/data</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
		        <artifactId>maven-assembly-plugin</artifactId>
		        <version>2.4</version>
		        <configuration>
					<descriptors>
						<descriptor>${basedir}/src/assembly/vertx-module-distribution-assembly.xml</descriptor>
					</descriptors>
		        </configuration>
		        <executions>
					<execution>
			            <id>make-assembly</id>
			            <phase>package</phase>
			            <goals>
			            	<goal>single</goal>
			            </goals>
			        </execution>
		        </executions>
		  	</plugin>
			<plugin>
			    <groupId>org.anacoders.plugins</groupId>
			    <artifactId>vertx-maven-plugin</artifactId>
			    <version>1.3.0.1</version>
			    <configuration>
			        <verticleName>org.riaconnection.chronos.server.ChronosServer</verticleName>
			    </configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>openshift-vertx-exists</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<missing>vertxDistro/vert.x-1.3.0.final.zip</missing>
				</file>
			</activation>
			<properties>
				<vertx.installed>false</vertx.installed>
			</properties>
			<build>
				<plugins>
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>wagon-maven-plugin</artifactId>
					    <version>1.0-beta-4</version>
					    <executions>
					        <execution>
					            <id>download-vertx</id>
					            <phase>validate</phase>
					            <goals>
					                <goal>download-single</goal>
					            </goals>
					            <configuration>
					                <url>http://vert-x.github.io/</url>
					                <fromFile>vertx-downloads/downloads/vert.x-${vertx.version}.zip</fromFile>
					                <toDir>${basedir}/vertxDistro/</toDir>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>install-vertx</id>
								<phase>prepare-package</phase>
								<configuration>
									<target name="install-vertx" if="vertx.installed">
										<unzip src="${basedir}/vertxDistro/vert.x-${vertx.version}.zip" dest="${vertx.install.dir}/"/>
										<move todir="${vertx.install.dir}/vert.x">
										    <fileset dir="${vertx.install.dir}/vert.x-${vertx.version}"/>
										</move>
										<chmod file="${vertx.install.dir}/vert.x/bin/vertx" perm="ugo+rx"/>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>install-chronos</id>
								<phase>install</phase>
								<configuration>
									<target name="install-chronos">
										<delete dir="${vertx.install.dir}/vert.x/mods/${project.build.finalName}"/>
										<unzip src="${project.build.directory}/${project.build.finalName}-vertx-module.zip" dest="${vertx.install.dir}/vert.x/mods"/>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		
		<profile>
			<id>openshift</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<vertx.dir>${env.OPENSHIFT_DATA_DIR}/vert.x</vertx.dir>
				<mongo.host>${env.OPENSHIFT_MONGODB_DB_HOST}</mongo.host>
				<mongo.port>${env.OPENSHIFT_MONGODB_DB_PORT}</mongo.port>
				<mongo.admin>${env.OPENSHIFT_MONGODB_DB_USERNAME}</mongo.admin>
				<mongo.password>${env.OPENSHIFT_MONGODB_DB_PASSWORD}</mongo.password>
				<mongo.db>${env.OPENSHIFT_APP_NAME}</mongo.db>
			</properties>
		</profile>
	</profiles>

	<artifactId>chronos</artifactId>
	<name>chronos</name>
</project>
